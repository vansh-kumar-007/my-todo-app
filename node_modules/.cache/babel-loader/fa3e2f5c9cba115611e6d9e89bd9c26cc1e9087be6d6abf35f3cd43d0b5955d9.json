{"ast":null,"code":"// ...existing imports...\nconst handleSmartAdd = async e => {\n  e.preventDefault();\n  if (!smartInput.trim()) return;\n  setParsing(true);\n  try {\n    const res = await fetch(\"/api/parse-task\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: smartInput\n      })\n    });\n    const parsed = await res.json();\n\n    // Fallback in case parsing fails\n    if (!parsed.text) {\n      alert(\"Could not parse task. Please try again.\");\n      setParsing(false);\n      return;\n    }\n    await addDoc(collection(db, 'tasks'), {\n      text: parsed.text,\n      uid: user.uid,\n      createdAt: new Date(parsed.dueDate || Date.now()),\n      completed: false,\n      dueDate: parsed.dueDate || null,\n      recurrence: parsed.recurrence || null\n    });\n    setSmartInput('');\n  } catch (err) {\n    alert(\"Error adding smart task: \" + err.message);\n  }\n  setParsing(false);\n};","map":{"version":3,"names":["handleSmartAdd","e","preventDefault","smartInput","trim","setParsing","res","fetch","method","headers","body","JSON","stringify","text","parsed","json","alert","addDoc","collection","db","uid","user","createdAt","Date","dueDate","now","completed","recurrence","setSmartInput","err","message"],"sources":["/home/vansh/my-todo-app/src/ToDoList.js"],"sourcesContent":["// ...existing imports...\nconst handleSmartAdd = async (e) => {\n  e.preventDefault();\n  if (!smartInput.trim()) return;\n  setParsing(true);\n\n  try {\n    const res = await fetch(\"/api/parse-task\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ text: smartInput }),\n    });\n    const parsed = await res.json();\n\n    // Fallback in case parsing fails\n    if (!parsed.text) {\n      alert(\"Could not parse task. Please try again.\");\n      setParsing(false);\n      return;\n    }\n\n    await addDoc(collection(db, 'tasks'), {\n      text: parsed.text,\n      uid: user.uid,\n      createdAt: new Date(parsed.dueDate || Date.now()),\n      completed: false,\n      dueDate: parsed.dueDate || null,\n      recurrence: parsed.recurrence || null,\n    });\n    setSmartInput('');\n  } catch (err) {\n    alert(\"Error adding smart task: \" + err.message);\n  }\n  setParsing(false);\n};"],"mappings":"AAAA;AACA,MAAMA,cAAc,GAAG,MAAOC,CAAC,IAAK;EAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,CAAC,EAAE;EACxBC,UAAU,CAAC,IAAI,CAAC;EAEhB,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEV;MAAW,CAAC;IAC3C,CAAC,CAAC;IACF,MAAMW,MAAM,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;;IAE/B;IACA,IAAI,CAACD,MAAM,CAACD,IAAI,EAAE;MAChBG,KAAK,CAAC,yCAAyC,CAAC;MAChDX,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMY,MAAM,CAACC,UAAU,CAACC,EAAE,EAAE,OAAO,CAAC,EAAE;MACpCN,IAAI,EAAEC,MAAM,CAACD,IAAI;MACjBO,GAAG,EAAEC,IAAI,CAACD,GAAG;MACbE,SAAS,EAAE,IAAIC,IAAI,CAACT,MAAM,CAACU,OAAO,IAAID,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC;MACjDC,SAAS,EAAE,KAAK;MAChBF,OAAO,EAAEV,MAAM,CAACU,OAAO,IAAI,IAAI;MAC/BG,UAAU,EAAEb,MAAM,CAACa,UAAU,IAAI;IACnC,CAAC,CAAC;IACFC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZb,KAAK,CAAC,2BAA2B,GAAGa,GAAG,CAACC,OAAO,CAAC;EAClD;EACAzB,UAAU,CAAC,KAAK,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}